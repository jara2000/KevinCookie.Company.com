

Write yaml code to use in Visual Studio Code with Ansible where the goal is to change directory to /triangle on a linux server
and execute the following tasks:

Install the .rpm file located in folder /triangle that begins with the string aksusbd

Scan file /etc/systemd/system/aksusbd.service for a line begining with the word ExecStart and replace the entire line with "ExecStart=/usr/sbin/aksusbd_x86_64" if the line is not an exact match to this string. If the string is a match then keep the line intact.

Scan file /etc/systemd/system/hasplmbd.service for a line begining with the word ExecStart and replace the entire line with "ExecStart=/usr/sbin/hasplmd_x86_64 -s" if the line is not an exact match to this string. If the string is a match then keep the line intact.

Copy file located in folder /triangle that begins with string haspvlib to folder location /var/hasplm/

Restart systemd service hasplmd.service

Install the .rpm file located in folder /triangle that begins with the string tmwsdg-

===============================================================

---
- name: Change Directory and Perform Tasks
  hosts: your_server
  become: yes  # Use become to execute tasks with sudo privileges

  tasks:
    - name: Change working directory to /triangle
      ansible.builtin.command: cd /triangle
      register: cd_result
      ignore_errors: yes  # Ignore errors if the directory doesn't exist or other issues

    - name: Install .rpm file starting with aksusbd
      ansible.builtin.find:
        paths: /triangle
        patterns: "aksusbd*.rpm"
      register: rpm_files

    - name: Install .rpm file if found
      ansible.builtin.rpm:
        name: "{{ item.path }}"
        state: present
      when: rpm_files.matched > 0
      with_items: "{{ rpm_files.files }}"

    - name: Replace ExecStart in aksusbd.service
      ansible.builtin.replace:
        path: /etc/systemd/system/aksusbd.service
        regexp: '^ExecStart='
        replace: 'ExecStart=/usr/sbin/aksusbd_x86_64'
      when: cd_result.rc == 0  # Only if the cd command was successful

    - name: Replace ExecStart in hasplmbd.service
      ansible.builtin.replace:
        path: /etc/systemd/system/hasplmbd.service
        regexp: '^ExecStart='
        replace: 'ExecStart=/usr/sbin/hasplmd_x86_64 -s'
      when: cd_result.rc == 0  # Only if the cd command was successful

    - name: Copy files starting with haspvlib
      ansible.builtin.copy:
        src: "/triangle/haspvlib*"
        dest: /var/hasplm/
      when: cd_result.rc == 0  # Only if the cd command was successful

    - name: Restart hasplmd.service
      ansible.builtin.systemd:
        name: hasplmd.service
        state: restarted
      when: cd_result.rc == 0  # Only if the cd command was successful

    - name: Install .rpm file starting with tmwsdg-
      ansible.builtin.find:
        paths: /triangle
        patterns: "tmwsdg-*.rpm"
      register: tmwsdg_rpm_files

    - name: Install .rpm file if found
      ansible.builtin.rpm:
        name: "{{ item.path }}"
        state: present
      when: tmwsdg_rpm_files.matched > 0
      with_items: "{{ tmwsdg_rpm_files.files }}"
	  

===============================================================

Make sure to replace your_server with the actual target server or its alias in your Ansible inventory file. 
This playbook will change the working directory to /triangle, install the specified RPM files, perform the 
necessary replacements in systemd service files, copy files, and restart the hasplmd.service as requested.



============================================================================================================
============================================================================================================
============================================================================================================



Write yaml code to use in Visual Studio Code with Ansible where the goal is to 
copy a .tar file from Artifactory repo to existing local folder named /triangle on a Linux server.
Once .tar file copied in local folder /traingle, we need to untar the file.

===============================================================

---
- name: Copy and untar .tar file from Artifactory
  hosts: your_linux_server
  become: yes
  tasks:
    - name: Create local directory if it doesn't exist
      file:
        path: /triangle
        state: directory

    - name: Copy .tar file from Artifactory to local folder
      get_url:
        url: "https://your-artifactory-url/path/to/your/file.tar"  # Replace with your Artifactory URL and file path
        dest: /triangle/file.tar
      register: download_result

    - name: Untar the .tar file
      ansible.builtin.unarchive:
        src: /triangle/file.tar
        dest: /triangle/
        remote_src: yes
      when: download_result.changed

    - name: Remove the downloaded .tar file
      file:
        path: /triangle/file.tar
        state: absent

===============================================================

Please make the following replacements in the playbook:

1. Replace your_linux_server with the target Linux server's hostname or IP address.
2.Replace https://your-artifactory-url/path/to/your/file.tar with the actual URL of the .tar file in your Artifactory repository.
3.Make sure Ansible and the requests module are installed on your control machine, and the target server is reachable via SSH.

Save this YAML code in a file with a .yml extension, and you can then run it using the ansible-playbook command:
  ansible-playbook your-playbook.yml
  
This playbook will create the local directory if it doesn't exist, copy the .tar file from Artifactory, untar it, and remove 
the downloaded .tar file when done.


============================================================================================================
============================================================================================================
============================================================================================================


What is the yaml code used in Ansible to scan a file for a line begining with the word ExecStart 
and replace the entire line with "ExecStart=/usr/sbin/aksusbd_x86_64" if the line does not match this string. 
If the string is a match then keep the line intact and exit.

===============================================================

---
- name: Replace ExecStart in a file
  hosts: your_target_host
  tasks:
    - name: Replace ExecStart line
      ansible.builtin.lineinfile:
        path: /path/to/your/file    # Specify the path to your file
        regexp: '^ExecStart='       # Regular expression to match the line
        line: 'ExecStart=/usr/sbin/aksusbd_x86_64'  # Line to replace with
		

===============================================================

In this YAML code:

- name is a description of the task.
- hosts should be set to the target host where you want to perform this action.
- path should be set to the path of the file you want to modify.
- regexp is set to ^ExecStart=, which is a regular expression to match lines beginning with "ExecStart."
- line is set to the replacement line you want to use if the regular expression doesn't match. This line will replace the matched line.

Make sure to replace your_target_host and /path/to/your/file with the actual values for your environment.